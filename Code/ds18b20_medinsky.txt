#define  F_CPU 8000000
#define  FOSC 8000000
#include <avr/io.h>
#include <stdint.h>
#include <util/delay.h>
#include <string.h>
#include "ADC.h"
#include "onewire.h"
#include "ds18x20.h"
#define MAXSENSORS 5
uint8_t gSensorIDs[MAXSENSORS][OW_ROMCODE_SIZE];
void USART_INIT()
{
	DDRD = 0b10000000;
	UBRR0H = 0;
	UBRR0L = 51;
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
	UCSR0C = (3<<UCSZ00);
	PORTD = (1<<PD7);
	_delay_ms(1000);
}
int USART_RECIVE()
{
	while(!(UCSR0A & (1<<RXC0)));
	return UDR0;
}
void USART_TRANSMITT(uint8_t data)
{
	while(!(UCSR0A & (1<<UDRE0)));
	UDR0 = data;
}
void STRING_TRANSMITT(char string[])
{
	for(int i = 0;string[i] != 0;i++)
	{
		USART_TRANSMITT((uint8_t)string[i]);
	}
}
static uint8_t search_sensors(void)
{
	uint8_t i;
	uint8_t id[OW_ROMCODE_SIZE];
	uint8_t diff, nSensors;

	STRING_TRANSMITT("Scanning Bus for DS18X20\n");

	ow_reset();

	nSensors = 0;

	diff = OW_SEARCH_FIRST;
	while ( diff != OW_LAST_DEVICE && nSensors < MAXSENSORS ) {
		DS18X20_find_sensor( &diff, &id[0] );

		if( diff == OW_PRESENCE_ERR ) {
			STRING_TRANSMITT( "No Sensor found\n");
			break;
		}

		if( diff == OW_DATA_ERR ) {
			STRING_TRANSMITT( "Bus Error\n");
			break;
		}

		for ( i=0; i < OW_ROMCODE_SIZE; i++ )
		gSensorIDs[nSensors][i] = id[i];

		nSensors++;
	}

	return nSensors;
}

void transmitt_address(unsigned char* address) {
	//STRING_TRANSMITT("%.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X\n", address[0],address[1],address[2],address[3],address[4],address[5],address[6],address[7]);
}
char* concat(char *s1, char *s2) {

    size_t len1 = strlen(s1);
    size_t len2 = strlen(s2);
    char *result = malloc(len1 + len2 + 1);
    memcpy(result, s1, len1);
    memcpy(result + len1, s2, len2 + 1);
    return result;
}
int main()
{
	USART_INIT();
	PORTD = (0<<PD7);
	uint8_t nSensors, i;
	int16_t decicelsius;
	int32_t mxRes;
	uint8_t error;
	char a[]="";
	STRING_TRANSMITT("\nDS18X20 1-Wire-Reader Demo\n");
	STRING_TRANSMITT("-------------------------------------------\n");
	nSensors = search_sensors();
	STRING_TRANSMITT( concat("DS18X20 Sensor(s) available:", itoa(nSensors,a,10)));
	while(1)
	{
		for ( i = nSensors; i > 0; i-- ) {
			itoa(i,a,10);
			STRING_TRANSMITT(concat("Sensor# %i \n",a));
			transmitt_address(gSensorIDs[i-1]);
			DS18X20_set_resolution(&gSensorIDs[i-1][0], DS18B20_12_BIT);

			if ( DS18X20_start_meas( DS18X20_POWER_EXTERN,&gSensorIDs[i-1][0]) == DS18X20_OK ) {
				_delay_ms( DS18B20_TCONV_12BIT );
				if (DS18X20_read_decicelsius(&gSensorIDs[i-1][0], &decicelsius)	== DS18X20_OK ) {
					itoa(decicelsius,a,10);
					STRING_TRANSMITT(concat("temp = ", a));
					} else {
					STRING_TRANSMITT( "CRC Error (lost connection?)" );
					error++;
				}
				if (DS18X20_read_maxres(&gSensorIDs[i-1][0], &mxRes)	== DS18X20_OK ) {
					itoa(mxRes*0.0001,a,10);
					STRING_TRANSMITT(concat("temp_maxREs = ",a));
					} else {
					STRING_TRANSMITT( "CRC Error (lost connection?)" );
					error++;
				}

			}
			else {
				STRING_TRANSMITT( "Start meas. failed (short circuit?)\n" );
				error++;
			}
		}
		_delay_ms(500);
		//USART_TRANSMITT(0x0d);
		//USART_TRANSMITT(0x0a);
	}
}